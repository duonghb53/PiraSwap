/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IPiraCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPiraCallee__factory>;
    getContractFactory(
      name: "IPiraERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPiraERC20__factory>;
    getContractFactory(
      name: "IPiraFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPiraFactory__factory>;
    getContractFactory(
      name: "IPiraMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPiraMigrator__factory>;
    getContractFactory(
      name: "IPiraPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPiraPair__factory>;
    getContractFactory(
      name: "IWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWETH__factory>;
    getContractFactory(
      name: "PiraERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PiraERC20__factory>;
    getContractFactory(
      name: "PiraFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PiraFactory__factory>;
    getContractFactory(
      name: "PiraPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PiraPair__factory>;
    getContractFactory(
      name: "PiraWETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PiraWETH__factory>;
    getContractFactory(
      name: "WETH",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WETH__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IPiraCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPiraCallee>;
    getContractAt(
      name: "IPiraERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPiraERC20>;
    getContractAt(
      name: "IPiraFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPiraFactory>;
    getContractAt(
      name: "IPiraMigrator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPiraMigrator>;
    getContractAt(
      name: "IPiraPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPiraPair>;
    getContractAt(
      name: "IWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWETH>;
    getContractAt(
      name: "PiraERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PiraERC20>;
    getContractAt(
      name: "PiraFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PiraFactory>;
    getContractAt(
      name: "PiraPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PiraPair>;
    getContractAt(
      name: "PiraWETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PiraWETH>;
    getContractAt(
      name: "WETH",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WETH>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
